---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Button from '../components/Button.astro';
import Hero from '../components/Hero.astro';
import PostPreview from '../components/PostPreview.astro';
import ProjectPreview from '../components/ProjectPreview.astro';
import ExperimentPreview from '../components/ExperimentPreview.astro';
import siteConfig from '../data/site-config';
import { sortItemsByDateDesc } from '../utils/data-utils';

const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
const featuredPosts = posts.filter(({ data }) => data.isFeatured);

const projects = (await getCollection('projects')).sort(sortItemsByDateDesc);
const featuredProjects = projects.filter(({ data }) => data.isFeatured);

const experiments = (await getCollection('experiments')).sort(sortItemsByDateDesc);
const featuredExperiments = experiments.filter(({ data }) => data.isFeatured);
---

<BaseLayout description={siteConfig.description} image={siteConfig.image}>
    <Hero />
    <!--
    {
      featuredProjects?.length > 0 && (
          <div class="mb-16 sm:mb-24">
              <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Projects</h2>

              {/* Featured Project (Large) */}
              {featuredProjects.slice(0, 1).map((project) => (
                  <div class="mb-8">
                      <ProjectPreview
                          project={project}
                          class="bg-white rounded-lg shadow-md overflow-hidden"
                          headingLevel="h3"
                      />
                  </div>
              ))}

              {/* Additional Projects (Smaller Grid) */}
              <div class="grid grid-cols-1 md:grid-cols-2 gap-8 auto-rows-fr">
                  {featuredProjects.slice(1, 3).map((project) => (
                      <div>
                          <ProjectPreview
                              project={project}
                              class="bg-white rounded-lg shadow-md overflow-hidden"
                              headingLevel="h3"
                          />
                      </div>
                  ))}
              </div>

              <div class="mt-12 sm:mt-16">
                  <Button href="/projects">View All Projects</Button>
              </div>
          </div>
      )
    }
    {
        featuredExperiments?.length > 0 && (
            <div class="mb-16 sm:mb-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Experiments</h2>
                <div class="grid grid-cols-2 md:grid-cols-3 gap-6 auto-rows-fr">
                    {featuredExperiments.map((experiment, index) => (
                        <div>
                            <ExperimentPreview
                                experiment={experiment}
                                class="bg-white rounded-md shadow-sm overflow-hidden hover:shadow-md transition-shadow"
                                headingLevel="h3"
                            />
                        </div>
                    ))}
                </div>
                <div class="mt-10 sm:mt-14">
                    <Button href="/experiments">View All Experiments</Button>
                </div>
            </div>
        )
    }
    -->
    {
        featuredPosts?.length > 0 && (
            <div class="mb-16 sm:mb-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Writing</h2>
                {featuredPosts.map((post) => (
                    <PostPreview post={post} class="mb-10 sm:mb-12" headingLevel="h3" />
                ))}
                <div class="mt-12 sm:mt-16">
                    <Button href="/blog">View All Posts</Button>
                </div>
            </div>
        )
    }
</BaseLayout>
